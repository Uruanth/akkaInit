akka {
    loglevel = "INFO"
}

customConfig {
    akka {
        loglevel = "DEBUG"
    }
}


#config test logs
interceptingLogMessages {
    akka {
        loggers = ["akka.testkit.TestEventListener"]
        test {
            # Tiempo de espera de los mensajes de respuesta del actor
            filter-leeway = 5s
        }
    }
}

# router demo
routerDemo {
    akka {
        actor.deployment {
            /poolMaster2 {
                router = round-robin-pool
                nr-of-instances = 4
            }

            /groupMaster2 {
                router = round-robin-group
                routees.paths = ["akka://routerSystem/user/slave_1","akka://routerSystem/user/slave_2","akka://routerSystem/user/slave_3",]
            }
        }
    }
}

# DispatcherDemo
my-dispatcher {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
        fixed-pool-size=3
    }
    throughput = 30
}


dispatcherDemo {
    akka.actor.deployment {
        /rtjvm {
            dispatcher = my-dispatcher
        }
    }
}

#Mailboxes
mailboxesDemo {
    support-ticket-dispatcher {
        mailbox-type = "part5Infra.MailBoxes$SupportTicketPriorityMailBox"
    }
    control-mailbox {
        mailbox-type = "akka.dispatch.UnboundedControlAwareMailbox"
    }

    akka.actor.deployment {
        /altControlAwareActor {
            mailbox = control-mailbox
        }
    }
}